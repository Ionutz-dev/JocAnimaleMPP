import org.gradle.api.file.DuplicatesStrategy

plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'app'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

javafx {
    version = "21"
    modules = ['javafx.controls', 'javafx.fxml']
}

application {
    mainClass = 'app.grpcclient.GrpcStartClient'
}

dependencies {
    implementation project(':Model')

    // JavaFX & UI
    implementation 'org.controlsfx:controlsfx:11.1.2'
    implementation 'org.openjfx:javafx-fxml:21'

    // Logging
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-api:2.23.1'

    // gRPC + Protobuf
    implementation 'io.grpc:grpc-netty-shaded:1.61.0'
    implementation 'io.grpc:grpc-protobuf:1.61.0'
    implementation 'io.grpc:grpc-stub:1.61.0'
    implementation 'com.google.protobuf:protobuf-java:3.25.3'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Testing
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.25.2'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.61.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

// Include generated sources
sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            srcDirs += [
                    'build/generated/source/proto/main/java',
                    'build/generated/source/proto/main/grpc'
            ]
        }
    }
}

// Handle duplicates safely
tasks.withType(Copy).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

test {
    useJUnitPlatform()
}
